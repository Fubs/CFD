/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

startFrom       startTime;

// in stead-state solvers like simpleFoam, time controls are just
// dummy variables for iterations of refinement
startTime       0;

stopAt          endTime;

endTime         10;

deltaT          0.001;

writeControl    timeStep;

writeInterval   5;

purgeWrite      20;

writeFormat     binary;

writePrecision  9;

writeCompression off;

timeFormat      general;

timePrecision   9;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           1;

fileModificationChecking timeStampMaster;

functions
{
    forces
    {
        type forces;
        libs ("libforces.so");

        executeControl writeTime;
        writeControl outputTime;

        patches (quad);
        pName p;
        UName U:
        log true;
        rho rhoInf;
        rhoInf 1.25;
        CofR (0 0 0);
        liftDir (0 0 1);
        dragDir (0 0 -1);
    }

    forceCoeffs
    {
        type forceCoeffs;
        libs ("libforces.so");

        executeControl writeTime;
        writeControl writeTime;

        patches (quad);
        pName p;
        UName U:
        log true;
        rho rhoInf;
        rhoInf 1.25;
        CofR (0 0 0);
        liftDir (0 0 1);
        dragDir (0 0 -1);
        pitchAxis (0 1 0);
        magUInf 0.5;
        lRef 0.05;
        Aref 0.0368;
    }

    residuals
    {
        type            residuals;
        functionObjectLibs ("libutilityFunctionObjects.so");
        enabled         true;
        writeControl timeStep;
        writeInterval 1;

        fields
        (
            p
            U
            k
            epsilon
        );
    }
};

// ************************************************************************* //
